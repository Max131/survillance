---
import "plyr/dist/plyr.css";
// import { Play, Download } from "lucide-astro";
import Poster from "@images/vp.webp";
---

<div x-data="videoList">
  <article class="sticky top-0 z-10 pt-4 bg-base-100">
    <video controls playsinline class="aspect-video" data-poster={Poster.src}>
      <source />
    </video>
  </article>
  <span class="loading loading-dots loading-xl my-6" x-show="isLoading"></span>

  <ul
    class="list mt-4 mb-8 bg-base-100 rounded-box shadow-md"
    x-show="!isLoading"
    x-cloak>
    <li
      class="list-row p-4 pb-2 text-xs opacity-60 tracking-wide flex justify-between">
      <div>Recent videos</div>
      <div><a href="/security/view/">View cam</a></div>
    </li>

    <template x-for="{video, cover} in list">
      <li class="list-row">
        <div>
          <img
            class="w-30 h-auto rounded-box skeleton aspect-video object-cover"
            loading="lazy"
            :src="`${basePath}${cover}`"
            alt="Video preview"
            x-data
            @load="$el.classList.remove('skeleton')"
            @error="$el.classList.remove('skeleton')"
          />
        </div>
        <div>
          <p><span class="font-semibold">CAM: 01</span></p>
          <p>
            <time class="text-xs" datetime="">2025-03-09</time>
          </p>
          <p>
            <time class="text-xs" datetime="">13:45:01</time>
          </p>
        </div>
        <div class="flex gap-2 items-end">
          <a
            class="btn btn-sm btn-square btn-info btn-soft hover:text-white"
            aria-label="Descargar video"
            download
            target="_blank"
            href=""
            data-download>
            <!-- <Download /> -->
          </a>
          <button
            class="btn btn-sm btn-square btn-info btn-soft hover:text-white"
            aria-label="Reproducir video"
            data-video=""
            data-play>
            <!-- <Play /> -->
          </button>
        </div>
      </li>
    </template>
  </ul>
</div>

<script>
  // import Plyr from "plyr";
  //
  // document.addEventListener("DOMContentLoaded", () => {
  //   const player = new Plyr("video", {
  //     controls: [
  //       "play",
  //       "progress",
  //       "current-time",
  //       "settings",
  //       "pip",
  //       "fullscreen",
  //     ],
  //     ratio: "16:9",
  //   });
  //
  // player.source = {
  //   type: "video",
  //   title: "Security video",
  //   sources: [
  //     {
  //       src: button.dataset.video,
  //     },
  //   ],
  // };
  //
  // player.play();
  // });

  Alpine.data("videoList", () => ({
    isLoading: true,
    basePath: import.meta.env.PUBLIC_BASE_PATH,
    list: [],
    init() {
      fetch(import.meta.env.PUBLIC_VIDEO_LIST_API)
        .then((res) => res.json())
        .then((data) => {
          this.list = data.files;
        })
        .finally(() => {
          this.isLoading = false;
        });
    },
  }));
</script>
